_svd: ../svd/stm32f412.svd

_rebase:
  # Make I2C1 the base type
  I2C1: I2C3
  SPI1: I2S2ext

_derive:
  TIM9: TIM12
  TIM13: TIM10
  TIM14: TIM10

"SPI*":
  SR:
    _modify:
      # This field has the wrong name in the SVD compared to RM0402
      TIFRFE:
        name: "FRE"

_modify:
  I2C4:
    # Rename I2C4 to FMPI2C1 to disambiguate from non-FMP I2C
    name: FMPI2C1

  FSMC:
     # ST got the base address of the FSMC peripheral wrong
     baseAddress: "0xA0000000"

FLASH:
  ACR:
    _modify:
      LATENCY:
        bitWidth: 4

# FSMC register fixes
FSMC:
  # Fix reset values
  _modify:
    BCR1:
      resetValue: "0x000030DB"
    BCR2:
      resetValue: "0x000030D2"
    BCR3:
      resetValue: "0x000030D2"
    BCR4:
      resetValue: "0x000030D2"
    "BTR?":
      resetValue: "0x0fffffff"
  # Delete registers not present on the STM32F412
  _delete:
    - "PCR?"
    - "SR?"
    - "PMEM?"
    - "PATT?"
    - "ECCR?"
    - PIO4
  BCR1:
    # Extra fields in BCR1
    _add:
      WFDIS:
        description: "Write FIFO disable"
        bitOffset: 21
        bitWidth: 1
      CCLKEN:
        description: "Continuous clock enable"
        bitOffset: 20
        bitWidth: 1
    WFDIS:
      Enabled: [0, "Write FIFO enabled"]
      Disabled: [1, "Write FIFO disabled"]
    CCLKEN:
      Enabled: [1, "FSMC_CLK is generated continuously during asynchronous and synchronous access"]
      Disabled: [0, "FSMC_CLK is only generated during the synchronous memory access"]
  # Delete WRAPMOD field from BCR1, BCR2, BCR3, BCR4
  "BCR?":
    _delete:
      - WRAPMOD
  # Delete DATLAT and CLKDIV fields from BWTR1, BWTR2, BWTR3, BWTR4
  "BWTR?":
    _delete:
      - DATLAT
      - CLKDIV

CRC:
  # The SVD calls the RESET field "CR", fix per RM0402
  CR:
    _modify:
      CR:
        name: RESET

# Merge the thousands of individual bit fields into a single field for each
# CAN filter register. This is not only much easier to use but also saves
# a huge amount of filespace and compilation time etc -- as much as 30% of all
# fields in many devices are just these CAN filter bank fields.
"CAN*":
  "F?R?":
    _merge:
      - "FB*"
  "F??R?":
    _merge:
      - "FB*"

RCC:
  APB1ENR:
    _modify:
      RTCAPB:
        name: RTCAPBEN
  DCKCFGR2:
    _modify:
      I2CFMP1SEL:
        name: FMPI2C1SEL
        bitWidth: 2
      CKSDIOSEL:
        name: SDIOSEL

# Add missing interrupts defined in RM0402
QUADSPI:
  _modify:
    _interrupts:
      Quad_SP:
        name: Quad_SPI
I2C3:
  _delete:
    _interrupts:
      - I2CFMP1_event
FMPI2C1:
  _add:
    _interrupts:
      I2CFMP1_event:
        description: I2CFMP1 event interrupt
        value: 95

# NOTE: Core peripherals (NVIC, MPU, FPU, SCB, etc.) were deleted

_include:
 - common_patches/i2c/merge_OAR1_ADDx_fields.yaml
 - common_patches/can/can.yaml
 - common_patches/can/can_filter_bank.yaml
 - ../peripherals/can/can.yaml
 - common_patches/dfsdm/dfsdm_v2.yaml
 - common_patches/rcc/f4_fmpi2c.yaml
 - common_patches/i2c/f4_fmpi2c.yaml
 - common_patches/adc/f4_single_csr.yaml
 - common_patches/adc/f4_single_ccr.yaml
 - common_patches/fsmc/fsmc_sram.yaml
 - common_patches/fsmc/fsmc_sramfix_common.yaml
 - ../peripherals/fsmc/fsmc_sram.yaml
 - ../peripherals/rcc/rcc_v2.yaml
 - ../peripherals/rcc/rcc_v2_bdcr_lsemod.yaml
 - ../peripherals/rcc/rcc_v2_pllcfgr_pllr.yaml
 - ../peripherals/rcc/rcc_v2_i2s_pll.yaml
 - ../peripherals/rcc/rcc_v2_i2s_pllsrc.yaml
 - ../peripherals/rcc/rcc_v2_i2s_pllq.yaml
 - ../peripherals/rcc/rcc_v2_i2s_pllm.yaml
 - ../peripherals/rcc/rcc_v2_dckcfgr_timpre.yaml
 - ../peripherals/rcc/rcc_v2_dckcfgr_i2s12src.yaml
 - ../peripherals/rcc/rcc_v2_dckcfgr_dfsdm_f4.yaml
 - ../peripherals/rcc/rcc_v2_dckcfgr2_48m_sd.yaml
 - ../peripherals/rcc/rcc_v2_dckcfgr2_i2csel.yaml
 - ../peripherals/rcc/rcc_v2_ckgatenr.yaml
 - ../peripherals/rcc/rcc_merge_rtcsel.yaml
 - ../peripherals/gpio/v2/common.yaml
 - ../peripherals/crc/crc_basic.yaml
 - ../peripherals/crc/crc_idr_8bit.yaml
 - ../peripherals/adc/adc_v2_smpr.yaml
 - ../peripherals/adc/adc_v2_single.yaml
 - ../peripherals/adc/adc_v2/adc_v2_extsel_c.yaml
 - common_patches/dma/dma_v2.yaml
 - ../peripherals/dma/dma_v2.yaml
 - ../peripherals/spi/spi_v1.yaml
 - common_patches/tim/common.yaml
 - ../peripherals/tim/tim_basic_no_opm.yaml
 - ../peripherals/tim/tim6.yaml
 - ../peripherals/tim/tim2345_mixed.yaml
 - common_patches/tim/tim2345_mixed_l.yaml
 - ../peripherals/tim/tim_advanced.yaml
 - common_patches/tim/tim_ccr.yaml
 - ../peripherals/tim/v1/ccm.yaml
 - ../peripherals/usart/uart_common.yaml
 - ../peripherals/usart/uart_sample.yaml
 - ../peripherals/usart/uart_usart.yaml
 - ../peripherals/i2c/i2c_v1.yaml
 - ../peripherals/i2c/i2c_v2_fmp.yaml
 - ../peripherals/wwdg/wwdg.yaml
 - ../peripherals/iwdg/iwdg.yaml
 - ../peripherals/exti/exti.yaml
 - ../peripherals/flash/flash_v1.yaml
 - ../peripherals/flash/flash_latency16.yaml
 - common_patches/rtc/alarm.yaml
 - common_patches/rtc/rtc_bkpr.yaml
 - common_patches/usb_otg/fs_remove_prefix.yaml
 - common_patches/usb_otg/fs_v1ext.yaml
 - common_patches/usb_otg/fs_v1.yaml
 - common_patches/dbgmcu/dbgmcu.yaml
 - common_patches/rtc/rtc_cr.yaml
 - ../peripherals/rtc/rtc_common.yaml
 - ../peripherals/sdio/sdio_f4.yaml
 - common_patches/i2c/v1_fltr.yaml
 - ../peripherals/i2c/i2c_v1_fltr.yaml
 - common_patches/adc/adc_common_group_name.yaml
